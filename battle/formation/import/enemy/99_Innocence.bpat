% Automatically dumped from section 00

#new:Actor $99_Innocence {
% stats
[Index]         DCb 
[Level]         5`b 
[MaxHP]         18`b 
[Coins]         1`b 
[Flags]       00200204 
[StatusTable] $StatusTable_Innocence
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_Innocence
[Script]      $Script_Init_Innocence
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    0`b 
[PowerBounce] 70`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_Innocence {
.Element:Normal 00000000
.Element:End
}

#new:StatusTable $StatusTable_Innocence {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    0`
.Status:Frozen    0`
.Status:Dizzy     0`
.Status:Fear      0`
.Status:Static    0`
.Status:Paralyze  0`
.Status:Shrink    0`
.Status:Stop      30`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:PartsTable $PartsTable_Innocence {
00020001 01000000 001400FF $IdleAnimations_Innocence $DefenseTable_Innocence 00000000 00000000 00F60000 00000000  
}

#new:IdleAnimations $IdleAnimations_Innocence {
.Status:Normal    009E0001
.Status:Stone     009E0000
.Status:Sleep     009E0002
.Status:Poison    009E0001
.Status:Stop      009E0000
.Status:Static    009E0001
.Status:Paralyze  009E0000
.Status:Dizzy     009E0007
.Status:Fear      009E0007
.Status:End
}

#new:Script $Script_Init_Innocence {
     Call  SetActorPos   ( .Actor:Self  90` 75` -43` )
   1C:  Call  ForceHomePos  ( .Actor:Self  90` 75` -43` )
   38:  Call  HPBarToHome   ( .Actor:Self )
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_Innocence )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_Innocence )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_Innocence )
   Call SetActorVar ( .Actor:Self 00000000 00000000 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_Innocence {
  250:  Loop
  2AC:  	Wait  1`
  2B8:  EndLoop
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_Innocence {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
        Call  GetLastDamage ( .Actor:Self *VarF )
   58:  Switch  *Var0 
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001 
   8C:  		SetConst  *Var1  009E0011 
   9C:  		ExecWait  DoNormalHit 
            If *VarF > 0`
              ExecWait  $Script_RighteousMight
            EndIf
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001 
   CC:  		SetConst  *Var1  009E0009 
   DC:  		SetConst  *Var2  009E000A 
   EC:  		ExecWait  DoBurnHit 
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001 
  114:  		SetConst  *Var1  009E0009 
  124:  		SetConst  *Var2  009E000A 
  134:  		ExecWait  DoBurnHit 
  140:  		SetConst  *Var0  00000001 
  150:  		SetConst  *Var1  009E000A
  ExecWait  $Script_Level3Check
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001 
  190:  		SetConst  *Var1  009E0005 
  1A0:  		ExecWait  DoSpinSmashHit 
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001 
  1C8:  		SetConst  *Var1  009E0005 
  1D8:  		ExecWait  DoSpinSmashHit 
  1E4:  		SetConst  *Var0  00000001 
  1F4:  		SetConst  *Var1  009E0006
  ExecWait  $Script_Level3Check
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001 
  234:  		SetConst  *Var1  009E000E 
  244:  		ExecWait  DoShockHit 
  250:  		SetConst  *Var0  00000001 
  260:  		SetConst  *Var1  009E0005 
  270:  		ExecWait  DoJumpBack 
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 009E0007 )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 009E0001 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001 
  394:  		SetConst  *Var1  009E000E 
  3A4:  		ExecWait  DoShockHit 
  3B0:  		SetConst  *Var0  00000001 
  3C0:  		SetConst  *Var1  009E0006
  ExecWait  $Script_Level3Check
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001 
  424:  		SetConst  *Var1  009E0001 
  434:  		ExecWait  DoImmune 
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001 
  464:  		SetConst  *Var1  009E0011 
  474:  		ExecWait  DoNormalHit 
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001 
  49C:  		SetConst  *Var1  009E0002
  ExecWait  $Script_Level3Check
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 009E0003 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001 
  57C:  		SetConst  *Var1  009E0001 
  58C:  		ExecWait  DoRecover 
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001 
  5B4:  		SetConst  *Var1  009E0003 
  5C4:  		SetConst  *Var2  009E0005 
  5D4:  		ExecWait  DoScareAway 
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001 
  604:  		SetConst  *Var1  009E0003 
  614:  		ExecWait  DoAirLift 
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001 
  63C:  		SetConst  *Var1  009E0005 
  64C:  		ExecWait  DoBlowAway 
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 009E0001 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_TakeTurn_Innocence {
  Call  UseIdleAnimation  ( .Actor:Self .False )
  14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  Call ActorExists ( .Actor:Enemy8 *Var0 )
  If *Var0 == .True
    Thread
      Call  ShowMessageAtScreenPos    ( 0001000F  160`  40` ) % Purity Blessing
      EndThread
    Call SetAnimation ( .Actor:Self 00000001 009E000F )
    Call GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
    Add *Var1 10`
    Wait  5`
    Call  PlayEffect        ( ~FX:Recover:LittleHeart *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
    Call  PlaySoundAtActor ( .Actor:Self 00000214 ) 
    D48:  Thread
    D50:  	Call  8026BF48  ( 00000001 )
    D60:  	Call  HealActor ( .Actor:Enemy8 00000004 .False )
    D78:  	Call  8026BF48  ( 00000000 )
    D88:  EndThread
    D90:  Wait 20`
    Else
      Thread
        Call  ShowMessageAtScreenPos    ( 00010010  160`  40` ) % Song of Lament
        EndThread
        Call SetAnimation ( .Actor:Self 00000001 009E0002 )
        Wait 20`
        Call  PlaySoundAtActor  ( .Actor:Self .Sound:DayzeeSong )
        36C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
        388:  Add   *Var1  00000019 
        398:  Add   *Var2  00000002 
        3A8:  Loop  0000000D 
        3B4:  	Call  RandInt       ( 0000001E *Var3 )
        3C8:  	Sub   *Var3  0000000F 
        3D8:  	Add   *Var3  *Var0 
        3E8:  	Call  PlayEffect    ( ~FX:MusicNote:Left *Var3 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
        42C:  	Wait  10`
        438:  EndLoop
        440:  Call  SetAnimation      ( .Actor:Self 00000001 009E0001 )
        458:  Wait  10`
        464:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
        488:  Switch  *Var0 
        494:  	CaseOR  ==  .HitResult:Miss % 6
        4A0:  	CaseOR  ==  .HitResult:Lucky % 5
        4AC:  		Set   *VarA  *Var0 
        4BC:  		If  *VarA  ==  .HitResult:Lucky % 5
        4CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
        4F0:  		EndIf
        508:  		Wait  15`
        5A4:  	EndCaseGroup
        5AC:  EndSwitch
        5B4:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
        5C8:  Call  SetGoalToTarget   ( .Actor:Self )
        5D8:  Wait  2`
        5E4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 ~DebuffType:Sleep:2:90` 00000008 00000020 )
        60C:  Switch  *VarF 
        618:  	CaseOR  ==  .HitResult:Hit % 0
        624:  	CaseOR  ==  .HitResult:QuakeImmune % 2
        650:  		Wait  20`
        674:  	EndCaseGroup
        67C:  EndSwitch
  EndIf
 C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  %/
  CB8:  Return
  CC0:  End
}

#new:Script $Script_RighteousMight
{
  Call ActorExists ( .Actor:Enemy8 *Var0 )
  If *Var0 == .True
    Wait 30`
    Thread
      Call  ShowMessageAtScreenPos    ( 0001000E  160`  40` ) % Purity Blessing
      EndThread
    Call GetActorPos ( .Actor:Enemy8 *Var0 *Var1 *Var2 )
    Call SetGoalPos ( .Actor:Enemy8 *Var0 *Var1 *Var2 )
    Call SetActorJumpGravity ( .Actor:Enemy8 *Fixed[1.2] )
    Call PlaySoundAtActor ( .Actor:Enemy8 00000262 )
    Call JumpToGoal ( .Actor:Enemy8 15` .False .False .True )
    Wait 20`
    Call PlaySoundAtActor ( .Actor:Enemy8 .Sound:BigPowerUp )
    Add *Var0 20`
    Add *Var1 20`
    Call PlayEffect ( ~FX:StatChange:AttackPlus2 *Var0 *Var1 *Var2 *Fixed[2.0] 30` )
    Call EnableActorGlow ( .Actor:Enemy8 .True )
    Call AddActorVar ( .Actor:Enemy8 00000000 2` )
  EndIf
  Return
  End
}